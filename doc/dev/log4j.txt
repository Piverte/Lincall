FATAL 	Severe errors that cause premature termination. Expect these to be immediately visible on a status console.
ERROR 	Other runtime errors or unexpected conditions. Expect these to be immediately visible on a status console.
WARN 	Use of deprecated APIs, poor use of API, 'almost' errors, other runtime situations that are undesirable or unexpected, but not necessarily "wrong". Expect these to be immediately visible on a status console.
INFO 	Interesting runtime events (startup/shutdown). Expect these to be immediately visible on a console, so be conservative and keep to a minimum.
DEBUG 	Detailed information on the flow through the system. Expect these to be written to logs only.
TRACE 	Most detailed information. Expect these to be written to logs only. Since version 1.2.12.

to init the log4j in the class:

1 step : declare the variable Logger m_logger
2 step : int m_log4j : m_logger = (new Server_Log4J()).getLogger(); or m_logger = (new Client_Log4J()).getLogger();
3 step : use m_log4j : m_logger.info("log info");